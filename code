pipeline {
    agent any

    stages {
        stage('Extract Credentials') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'aa_11', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')]) {
                        // You can now use the SSH_USER and SSH_KEY variables to reference the username and private key file
                        echo "SSH Username: ${SSH_USER}"
                        echo "SSH Private Key file path: ${SSH_KEY}"
                        
                        // For example, you might want to copy the key file to a specific location
                        sh 'cp $SSH_KEY /path/to/destination'
                        
                        // Or use it directly in an SSH command
                        sh '''
                            ssh -i $SSH_KEY $SSH_USER@hostname << EOF
                            echo "Connected to remote host"
                            EOF
                        '''
                    }
                }
            }
        }
    }
}




#!/bin/bash

# Set the service account email
SERVICE_ACCOUNT_EMAIL="your-service-account-email@your-project.iam.gserviceaccount.com"

# Fetch the service account details
SERVICE_ACCOUNT_NAME=$(gcloud iam service-accounts describe $SERVICE_ACCOUNT_EMAIL --format="value(displayName)")

# Check if the service account name is 'abc-test'
if [ "$SERVICE_ACCOUNT_NAME" == "abc-test" ]; then
    echo "The service account name is abc-test."
else
    echo "The service account name is not abc-test. It is $SERVICE_ACCOUNT_NAME."
fi



- name: Set ownership and permissions for /root/.pipeline/pip.conf
  file:
    path: /root/.pipeline/pip.conf
    owner: root
    group: root
    mode: '0644'
