pipeline {
    agent any
    parameters {
        string(name: 'CHANGE_ID', defaultValue: '', description: 'Enter the change or incident ID')
        string(name: 'JOB_NAME', defaultValue: '', description: 'Enter the job name to trigger')
        string(name: 'PARAMS', defaultValue: '', description: 'Enter parameters to pass to the job in JSON format')
    }
    environment {
        CREDENTIALS_ID = 'your-credentials-id'  // Replace with the actual ID of your credentials
    }
    stages {
        stage('Check String and Execute Curl') {
            steps {
                script {
                    def changeId = params.CHANGE_ID
                    def jobName = params.JOB_NAME
                    def paramsJson = params.PARAMS

                    if (changeId.startsWith('CHG')) {
                        echo "Executing curl command for change ID: ${changeId}"
                        withCredentials([usernamePassword(credentialsId: env.CREDENTIALS_ID, usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                            def result = sh(script: "curl -u ${USERNAME}:${PASSWORD} https://ice.it.bc/ice/api/V2/changes/${changeId}", returnStdout: true).trim()
                            echo "Curl result: ${result}"

                            def jsonSlurper = new groovy.json.JsonSlurper()
                            def parsedResult = jsonSlurper.parseText(result)

                            // Assuming you want to extract a parameter named 'parameterName'
                            def parameterValue = parsedResult.parameterName
                            echo "Extracted parameter value: ${parameterValue}"

                            // Parse the JSON string of parameters
                            def jobParams = jsonSlurper.parseText(paramsJson)

                            // Convert parsed parameters to Jenkins build parameters
                            def buildParams = jobParams.collect { key, value -> string(name: key, value: value.toString()) }

                            // Trigger the specified job with parameters
                            build job: jobName, parameters: buildParams
                        }
                    } else if (changeId.startsWith('IN')) {
                        echo "The ID starts with 'IN'. No curl command executed."
                    } else {
                        echo "The ID does not start with 'CHG' or 'IN'. No action taken."
                    }
                }
            }
        }
    }
}
