from github import Github
import csv

# Replace 'your_github_token' with your personal access token for GitHub Enterprise
GITHUB_TOKEN = 'your_github_token'
GITHUB_ENTERPRISE_URL = 'https://almgithub.uk.bcp/api/v3'  # GitHub Enterprise API URL
ORG_NAME = 'ihub-infrastructure'
SEARCH_TERM = 'efx'
CSV_FILE = 'efx_occurrences.csv'

# Initialize Github instance with the provided token and Enterprise URL
g = Github(base_url=GITHUB_ENTERPRISE_URL, login_or_token=GITHUB_TOKEN)

def search_code_in_org(org_name, search_term):
    """Uses the GitHub search API to find occurrences of a term in code across the organization."""
    query = f"{search_term} org:{org_name}"
    result = g.search_code(query)
    return result

def get_last_committer(repo, file_path):
    """Gets the last committer for a specified file in a repository."""
    try:
        commits = repo.get_commits(path=file_path)
        if commits.totalCount > 0:
            return commits[0].commit.committer.name
        return None
    except Exception as e:
        print(f"Error fetching commits for file {file_path} in repo {repo.name}: {str(e)}")
        return None

def main():
    """Main function to gather data and write to a CSV file."""
    all_data = []
    search_results = search_code_in_org(ORG_NAME, SEARCH_TERM)
    
    for code_result in search_results:
        repo_name = code_result.repository.name
        file_path = code_result.path
        last_committer = get_last_committer(code_result.repository, file_path)
        all_data.append([repo_name, file_path, last_committer])
    
    # Write data to CSV
    with open(CSV_FILE, mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(["Repository", "File Path", "Last Committer"])
        writer.writerows(all_data)
    
    print(f"Data has been written to {CSV_FILE}")

if __name__ == "__main__":
    main()
