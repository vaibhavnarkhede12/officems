#!/bin/bash

# List of project IDs
PROJECTS=(
  "your-project-id-1"
  "your-project-id-2"
)

for PROJECT in "${PROJECTS[@]}"; do
  echo "üîç Project: $PROJECT"
  
  # Get all instance names with zone
  echo "‚û°Ô∏è  Fetching all instances..."
  ALL_INSTANCES=$(gcloud compute instances list --project="$PROJECT" --format="table[no-heading](name, zone.basename())")
  
  # Declare an associative array for MIG instances
  declare -A MIG_INSTANCES

  # Get all MIGs (zonal and regional)
  echo "‚û°Ô∏è  Fetching managed instance groups..."
  MIGS=$(gcloud compute instance-groups managed list --project="$PROJECT" --format="json")

  echo "$MIGS" | jq -c '.[]' | while read -r GROUP; do
    NAME=$(echo "$GROUP" | jq -r '.name')
    LOCATION=$(echo "$GROUP" | jq -r '.zone // .region')
    LOC_TYPE=$(echo "$LOCATION" | grep -q '/zones/' && echo "zone" || echo "region")
    LOC_NAME=$(basename "$LOCATION")

    echo "   üîÅ MIG: $NAME ($LOC_TYPE: $LOC_NAME)"
    
    # List instances in the MIG
    INSTANCES=$(gcloud compute instance-groups managed list-instances "$NAME" \
      --"$LOC_TYPE"="$LOC_NAME" \
      --project="$PROJECT" --format="value(instance.basename())")

    for INST in $INSTANCES; do
      MIG_INSTANCES["$INST"]=1
    done
  done

  echo "‚û°Ô∏è  Checking for non-MIG instances..."
  while read -r VM_NAME VM_ZONE; do
    if [[ -z "${MIG_INSTANCES[$VM_NAME]}" ]]; then
      echo "üö´ Non-MIG instance: $VM_NAME (zone: $VM_ZONE)"
    fi
  done <<< "$ALL_INSTANCES"

  echo
done