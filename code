#!/bin/bash

# List of GCP project IDs
PROJECTS=("your-project-id-1" "your-project-id-2")

for PROJECT in "${PROJECTS[@]}"; do
  echo "üîç Project: $PROJECT"

  # Get all VMs in the project
  echo "‚û°Ô∏è  Fetching all VM instances..."
  ALL_VMS=$(gcloud compute instances list --project="$PROJECT" --format="table[no-heading](name, zone.basename())")

  declare -A MIG_INSTANCE_MAP

  echo "‚û°Ô∏è  Fetching all managed instance groups..."
  MIGS=$(gcloud compute instance-groups managed list --project="$PROJECT" --format=json)

  echo "$MIGS" | jq -c '.[]' | while read -r GROUP; do
    NAME=$(echo "$GROUP" | jq -r '.name')
    LOCATION=$(echo "$GROUP" | jq -r '.zone // .region')
    LOCATION_TYPE=$(echo "$LOCATION" | grep -q "/zones/" && echo "zone" || echo "region")
    LOCATION_VALUE=$(basename "$LOCATION")

    echo "   üîÅ MIG: $NAME ($LOCATION_TYPE: $LOCATION_VALUE)"

    # List instances in MIG
    INSTANCE_LIST=$(gcloud compute instance-groups managed list-instances "$NAME" \
      --"$LOCATION_TYPE"="$LOCATION_VALUE" \
      --project="$PROJECT" \
      --format="value(instance.basename())")

    for INSTANCE in $INSTANCE_LIST; do
      MIG_INSTANCE_MAP["$INSTANCE"]=1
    done
  done

  echo "‚û°Ô∏è  Comparing against standalone instances..."
  while read -r VM_NAME VM_ZONE; do
    if [[ -z "${MIG_INSTANCE_MAP[$VM_NAME]}" ]]; then
      echo "üö´ Non-MIG instance: $VM_NAME (zone: $VM_ZONE)"
    fi
  done <<< "$ALL_VMS"

  echo ""
done