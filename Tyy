import json
import apache_beam as beam
from apache_beam.options.pipeline_options import PipelineOptions, StandardOptions
from datetime import datetime

class CreateMessages(beam.DoFn):
    def process(self, element):
        """Create 5 JSON messages each minute."""
        now = datetime.utcnow().isoformat()
        for i in range(5):
            yield json.dumps({
                "id": i,
                "timestamp": now,
                "message": f"Generated message {i}"
            })

def run():
    project_id = "your-project-id"
    topic_path = f"projects/{project_id}/topics/my-topic"

    options = PipelineOptions(
        streaming=True,
        save_main_session=True
    )
    options.view_as(StandardOptions).streaming = True

    with beam.Pipeline(options=options) as p:
        (
            p
            | "Generate every minute" >> beam.io.GenerateSequence(
                start=0,
                stop=None,
                interval=60
            )
            | "Create 5 messages" >> beam.ParDo(CreateMessages())
            | "Publish to Pub/Sub" >> beam.io.WriteToPubSub(topic_path)
        )

if __name__ == "__main__":
    run()
